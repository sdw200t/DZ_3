class Good { // класс для хранения данных о товаре со свойствами
    constructor (id,name,description,sizes,price,available) { // конструктор экземпляра товара принимающий параметры соответствующие свойствам выше
        this.id = id;                   // Код товара
        this.name = name;               // Наименование
        this.description = description; // Описание
        this.sizes = sizes;             // массив возможных размеров
        this.price = price;             // цена товара
        this.available = available;     // Признак доступности для продажи
    }
    set setAvailable(available) { // изменение признака доступности для продажи
        this.available = available;
    }
}

class GoodList { // класс для хранения каталога товаров со свойствами
    constructor () {
        this.#goods = goods;        // массив экземпляров объектов класса Good (приватное поле)
        this.filter = undefined;    // регулярное выражение используемое для фильтрации товаров по полю name
        this.sortPrice = false;     // булево значение, признак включения сортировки по полю Price
        this.sortDir = false;       // булево значение, признак направления сортировки по полю Price (true - по возрастанию, false - по убыванию)
    }
    get list() {}   // возвращает массив доступных для продажи товаров в соответствии с установленным фильтром и сортировкой по полю Price
    add() {}        // добавление товара в каталог
    remove(id) {}   // удаление товара из каталога по его id
}

class BasketGood extends Good { // класс дочерний от Good, для хранения данных о товаре в корзине с дополнительным свойством
    constructor (good) {
        this.amount = 1; // количество товара в корзине
    }
}

class Basket { // класс для хранения данных о корзине товаров со свойствами
    constructor() {
        this.goods = goods; // массив объектов класса BasketGood для хранения данных о товарах в корзине
    }
    get totalAmount() {} // возвращает общую стоимость товаров в корзине
    get totalSum() {}    // возвращает общее количество товаров в корзине
    add(good, amount) {} // Добавляет товар в корзину, если товар уже есть увеличивает количество
    remove(good, amount) {} // Уменьшает количество товара в корзине, если количество становится равным нулю, товар удаляется
    clear() {}              // Очищает содержимое корзины
    removeUnavailable() {}  // Удаляет из корзины товары, имеющие признак available === false (использовать filter())
}